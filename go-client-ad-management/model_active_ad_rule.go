/*
AdServer Ad Management

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActiveAdRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActiveAdRule{}

// ActiveAdRule Represents an ad rule that is available for printing.
type ActiveAdRule struct {
	// The rule ID. Leave an empty string if creating a new rule.
	AdRuleId string `json:"adRuleId"`
	// A name of this rule.
	Name string `json:"name"`
	// The conditions that must be `true` for this rule to be applicable. If no conditions are specified, the rule will match.
	Conditions []Condition `json:"conditions"`
	// The ID of the creative group.
	CreativeGroupId string `json:"creativeGroupId"`
	// Indicates if this rule is enabled and should be evaluated.
	Enabled bool `json:"enabled"`
	// Contains the creatives that are active for this rule.
	AvailableCreatives []AdsCreativeAvailableCreative `json:"availableCreatives,omitempty"`
}

// NewActiveAdRule instantiates a new ActiveAdRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveAdRule(adRuleId string, name string, conditions []Condition, creativeGroupId string, enabled bool) *ActiveAdRule {
	this := ActiveAdRule{}
	this.AdRuleId = adRuleId
	this.Name = name
	this.Conditions = conditions
	this.CreativeGroupId = creativeGroupId
	this.Enabled = enabled
	return &this
}

// NewActiveAdRuleWithDefaults instantiates a new ActiveAdRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveAdRuleWithDefaults() *ActiveAdRule {
	this := ActiveAdRule{}
	return &this
}

// GetAdRuleId returns the AdRuleId field value
func (o *ActiveAdRule) GetAdRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdRuleId
}

// GetAdRuleIdOk returns a tuple with the AdRuleId field value
// and a boolean to check if the value has been set.
func (o *ActiveAdRule) GetAdRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdRuleId, true
}

// SetAdRuleId sets field value
func (o *ActiveAdRule) SetAdRuleId(v string) {
	o.AdRuleId = v
}

// GetName returns the Name field value
func (o *ActiveAdRule) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ActiveAdRule) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ActiveAdRule) SetName(v string) {
	o.Name = v
}

// GetConditions returns the Conditions field value
func (o *ActiveAdRule) GetConditions() []Condition {
	if o == nil {
		var ret []Condition
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *ActiveAdRule) GetConditionsOk() ([]Condition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conditions, true
}

// SetConditions sets field value
func (o *ActiveAdRule) SetConditions(v []Condition) {
	o.Conditions = v
}

// GetCreativeGroupId returns the CreativeGroupId field value
func (o *ActiveAdRule) GetCreativeGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreativeGroupId
}

// GetCreativeGroupIdOk returns a tuple with the CreativeGroupId field value
// and a boolean to check if the value has been set.
func (o *ActiveAdRule) GetCreativeGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreativeGroupId, true
}

// SetCreativeGroupId sets field value
func (o *ActiveAdRule) SetCreativeGroupId(v string) {
	o.CreativeGroupId = v
}

// GetEnabled returns the Enabled field value
func (o *ActiveAdRule) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ActiveAdRule) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ActiveAdRule) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAvailableCreatives returns the AvailableCreatives field value if set, zero value otherwise.
func (o *ActiveAdRule) GetAvailableCreatives() []AdsCreativeAvailableCreative {
	if o == nil || IsNil(o.AvailableCreatives) {
		var ret []AdsCreativeAvailableCreative
		return ret
	}
	return o.AvailableCreatives
}

// GetAvailableCreativesOk returns a tuple with the AvailableCreatives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActiveAdRule) GetAvailableCreativesOk() ([]AdsCreativeAvailableCreative, bool) {
	if o == nil || IsNil(o.AvailableCreatives) {
		return nil, false
	}
	return o.AvailableCreatives, true
}

// HasAvailableCreatives returns a boolean if a field has been set.
func (o *ActiveAdRule) HasAvailableCreatives() bool {
	if o != nil && !IsNil(o.AvailableCreatives) {
		return true
	}

	return false
}

// SetAvailableCreatives gets a reference to the given []AdsCreativeAvailableCreative and assigns it to the AvailableCreatives field.
func (o *ActiveAdRule) SetAvailableCreatives(v []AdsCreativeAvailableCreative) {
	o.AvailableCreatives = v
}

func (o ActiveAdRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActiveAdRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["adRuleId"] = o.AdRuleId
	toSerialize["name"] = o.Name
	toSerialize["conditions"] = o.Conditions
	toSerialize["creativeGroupId"] = o.CreativeGroupId
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.AvailableCreatives) {
		toSerialize["availableCreatives"] = o.AvailableCreatives
	}
	return toSerialize, nil
}

type NullableActiveAdRule struct {
	value *ActiveAdRule
	isSet bool
}

func (v NullableActiveAdRule) Get() *ActiveAdRule {
	return v.value
}

func (v *NullableActiveAdRule) Set(val *ActiveAdRule) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveAdRule) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveAdRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveAdRule(val *ActiveAdRule) *NullableActiveAdRule {
	return &NullableActiveAdRule{value: val, isSet: true}
}

func (v NullableActiveAdRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveAdRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


