/*
AdServer Ad Management

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Ad type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ad{}

// Ad Represents an ad including all displayable creative groups and their conditions alongside with all reviews made by the exchanges.
type Ad struct {
	// The domain that this ad is going to redirect to.
	Domain string `json:"domain"`
	// The name of this ad.
	Name string `json:"name"`
	Spec AdsCreativeCreativeSpec `json:"spec"`
	// The rules that specify what are the conditions to display a creative group.
	Rules []AdRule `json:"rules"`
	// Tags that the user can add to facilitate searching.
	Tags []string `json:"tags"`
	// The ID of the ad.
	AdId string `json:"adId"`
	// The ID of the account that owns this ad.
	AccountId string `json:"accountId"`
	// Reviews for all applicable exchanges.
	ExchangeReviews []ExchangeReview `json:"exchangeReviews"`
	// Indicates if it is archived.
	Archived bool `json:"archived"`
}

// NewAd instantiates a new Ad object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAd(domain string, name string, spec AdsCreativeCreativeSpec, rules []AdRule, tags []string, adId string, accountId string, exchangeReviews []ExchangeReview, archived bool) *Ad {
	this := Ad{}
	this.Domain = domain
	this.Name = name
	this.Spec = spec
	this.Rules = rules
	this.Tags = tags
	this.AdId = adId
	this.AccountId = accountId
	this.ExchangeReviews = exchangeReviews
	this.Archived = archived
	return &this
}

// NewAdWithDefaults instantiates a new Ad object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdWithDefaults() *Ad {
	this := Ad{}
	return &this
}

// GetDomain returns the Domain field value
func (o *Ad) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *Ad) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *Ad) SetDomain(v string) {
	o.Domain = v
}

// GetName returns the Name field value
func (o *Ad) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Ad) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Ad) SetName(v string) {
	o.Name = v
}

// GetSpec returns the Spec field value
func (o *Ad) GetSpec() AdsCreativeCreativeSpec {
	if o == nil {
		var ret AdsCreativeCreativeSpec
		return ret
	}

	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value
// and a boolean to check if the value has been set.
func (o *Ad) GetSpecOk() (*AdsCreativeCreativeSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spec, true
}

// SetSpec sets field value
func (o *Ad) SetSpec(v AdsCreativeCreativeSpec) {
	o.Spec = v
}

// GetRules returns the Rules field value
func (o *Ad) GetRules() []AdRule {
	if o == nil {
		var ret []AdRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *Ad) GetRulesOk() ([]AdRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *Ad) SetRules(v []AdRule) {
	o.Rules = v
}

// GetTags returns the Tags field value
func (o *Ad) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *Ad) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *Ad) SetTags(v []string) {
	o.Tags = v
}

// GetAdId returns the AdId field value
func (o *Ad) GetAdId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdId
}

// GetAdIdOk returns a tuple with the AdId field value
// and a boolean to check if the value has been set.
func (o *Ad) GetAdIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdId, true
}

// SetAdId sets field value
func (o *Ad) SetAdId(v string) {
	o.AdId = v
}

// GetAccountId returns the AccountId field value
func (o *Ad) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Ad) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Ad) SetAccountId(v string) {
	o.AccountId = v
}

// GetExchangeReviews returns the ExchangeReviews field value
func (o *Ad) GetExchangeReviews() []ExchangeReview {
	if o == nil {
		var ret []ExchangeReview
		return ret
	}

	return o.ExchangeReviews
}

// GetExchangeReviewsOk returns a tuple with the ExchangeReviews field value
// and a boolean to check if the value has been set.
func (o *Ad) GetExchangeReviewsOk() ([]ExchangeReview, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExchangeReviews, true
}

// SetExchangeReviews sets field value
func (o *Ad) SetExchangeReviews(v []ExchangeReview) {
	o.ExchangeReviews = v
}

// GetArchived returns the Archived field value
func (o *Ad) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *Ad) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *Ad) SetArchived(v bool) {
	o.Archived = v
}

func (o Ad) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ad) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	toSerialize["name"] = o.Name
	toSerialize["spec"] = o.Spec
	toSerialize["rules"] = o.Rules
	toSerialize["tags"] = o.Tags
	toSerialize["adId"] = o.AdId
	toSerialize["accountId"] = o.AccountId
	toSerialize["exchangeReviews"] = o.ExchangeReviews
	toSerialize["archived"] = o.Archived
	return toSerialize, nil
}

type NullableAd struct {
	value *Ad
	isSet bool
}

func (v NullableAd) Get() *Ad {
	return v.value
}

func (v *NullableAd) Set(val *Ad) {
	v.value = val
	v.isSet = true
}

func (v NullableAd) IsSet() bool {
	return v.isSet
}

func (v *NullableAd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAd(val *Ad) *NullableAd {
	return &NullableAd{value: val, isSet: true}
}

func (v NullableAd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


