/*
AdServer Ad Management

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdFilters{}

// AdFilters Filters applicable to ads.
type AdFilters struct {
	// Generic search that can match against id, name, tag and domain.
	Search *string `json:"search,omitempty"`
	// The IDs of the ads to search for.
	AdIds []string `json:"adIds,omitempty"`
	// The domain to search for.
	Domain *string `json:"domain,omitempty"`
	// The list of creative group IDs to search usage for.
	CreativeGroupIds []string `json:"creativeGroupIds,omitempty"`
	// The name to search for.
	Name *string `json:"name,omitempty"`
	// `true` to include only archived creative groups, `false` to include only active, leave empty to include all.
	Archived *bool `json:"archived,omitempty"`
	// The tags to look for.
	Tag *string `json:"tag,omitempty"`
	Spec *AdsCreativeCreativeSpec `json:"spec,omitempty"`
	// Include only ads that have at least one exchange review with the indicated status.
	ExchangeReviewStatus *string `json:"exchangeReviewStatus,omitempty"`
}

// NewAdFilters instantiates a new AdFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdFilters() *AdFilters {
	this := AdFilters{}
	return &this
}

// NewAdFiltersWithDefaults instantiates a new AdFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdFiltersWithDefaults() *AdFilters {
	this := AdFilters{}
	return &this
}

// GetSearch returns the Search field value if set, zero value otherwise.
func (o *AdFilters) GetSearch() string {
	if o == nil || IsNil(o.Search) {
		var ret string
		return ret
	}
	return *o.Search
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetSearchOk() (*string, bool) {
	if o == nil || IsNil(o.Search) {
		return nil, false
	}
	return o.Search, true
}

// HasSearch returns a boolean if a field has been set.
func (o *AdFilters) HasSearch() bool {
	if o != nil && !IsNil(o.Search) {
		return true
	}

	return false
}

// SetSearch gets a reference to the given string and assigns it to the Search field.
func (o *AdFilters) SetSearch(v string) {
	o.Search = &v
}

// GetAdIds returns the AdIds field value if set, zero value otherwise.
func (o *AdFilters) GetAdIds() []string {
	if o == nil || IsNil(o.AdIds) {
		var ret []string
		return ret
	}
	return o.AdIds
}

// GetAdIdsOk returns a tuple with the AdIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetAdIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdIds) {
		return nil, false
	}
	return o.AdIds, true
}

// HasAdIds returns a boolean if a field has been set.
func (o *AdFilters) HasAdIds() bool {
	if o != nil && !IsNil(o.AdIds) {
		return true
	}

	return false
}

// SetAdIds gets a reference to the given []string and assigns it to the AdIds field.
func (o *AdFilters) SetAdIds(v []string) {
	o.AdIds = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *AdFilters) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *AdFilters) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *AdFilters) SetDomain(v string) {
	o.Domain = &v
}

// GetCreativeGroupIds returns the CreativeGroupIds field value if set, zero value otherwise.
func (o *AdFilters) GetCreativeGroupIds() []string {
	if o == nil || IsNil(o.CreativeGroupIds) {
		var ret []string
		return ret
	}
	return o.CreativeGroupIds
}

// GetCreativeGroupIdsOk returns a tuple with the CreativeGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetCreativeGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CreativeGroupIds) {
		return nil, false
	}
	return o.CreativeGroupIds, true
}

// HasCreativeGroupIds returns a boolean if a field has been set.
func (o *AdFilters) HasCreativeGroupIds() bool {
	if o != nil && !IsNil(o.CreativeGroupIds) {
		return true
	}

	return false
}

// SetCreativeGroupIds gets a reference to the given []string and assigns it to the CreativeGroupIds field.
func (o *AdFilters) SetCreativeGroupIds(v []string) {
	o.CreativeGroupIds = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdFilters) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdFilters) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdFilters) SetName(v string) {
	o.Name = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *AdFilters) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *AdFilters) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *AdFilters) SetArchived(v bool) {
	o.Archived = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *AdFilters) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *AdFilters) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *AdFilters) SetTag(v string) {
	o.Tag = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *AdFilters) GetSpec() AdsCreativeCreativeSpec {
	if o == nil || IsNil(o.Spec) {
		var ret AdsCreativeCreativeSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetSpecOk() (*AdsCreativeCreativeSpec, bool) {
	if o == nil || IsNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *AdFilters) HasSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given AdsCreativeCreativeSpec and assigns it to the Spec field.
func (o *AdFilters) SetSpec(v AdsCreativeCreativeSpec) {
	o.Spec = &v
}

// GetExchangeReviewStatus returns the ExchangeReviewStatus field value if set, zero value otherwise.
func (o *AdFilters) GetExchangeReviewStatus() string {
	if o == nil || IsNil(o.ExchangeReviewStatus) {
		var ret string
		return ret
	}
	return *o.ExchangeReviewStatus
}

// GetExchangeReviewStatusOk returns a tuple with the ExchangeReviewStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdFilters) GetExchangeReviewStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeReviewStatus) {
		return nil, false
	}
	return o.ExchangeReviewStatus, true
}

// HasExchangeReviewStatus returns a boolean if a field has been set.
func (o *AdFilters) HasExchangeReviewStatus() bool {
	if o != nil && !IsNil(o.ExchangeReviewStatus) {
		return true
	}

	return false
}

// SetExchangeReviewStatus gets a reference to the given string and assigns it to the ExchangeReviewStatus field.
func (o *AdFilters) SetExchangeReviewStatus(v string) {
	o.ExchangeReviewStatus = &v
}

func (o AdFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Search) {
		toSerialize["search"] = o.Search
	}
	if !IsNil(o.AdIds) {
		toSerialize["adIds"] = o.AdIds
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.CreativeGroupIds) {
		toSerialize["creativeGroupIds"] = o.CreativeGroupIds
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !IsNil(o.ExchangeReviewStatus) {
		toSerialize["exchangeReviewStatus"] = o.ExchangeReviewStatus
	}
	return toSerialize, nil
}

type NullableAdFilters struct {
	value *AdFilters
	isSet bool
}

func (v NullableAdFilters) Get() *AdFilters {
	return v.value
}

func (v *NullableAdFilters) Set(val *AdFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableAdFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableAdFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdFilters(val *AdFilters) *NullableAdFilters {
	return &NullableAdFilters{value: val, isSet: true}
}

func (v NullableAdFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


