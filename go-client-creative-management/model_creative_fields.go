/*
AdServer Creative Management

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreativeFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreativeFields{}

// CreativeFields Specifies editable fields that define creatives.
type CreativeFields struct {
	Banner *BannerFields `json:"banner,omitempty"`
}

// NewCreativeFields instantiates a new CreativeFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreativeFields() *CreativeFields {
	this := CreativeFields{}
	return &this
}

// NewCreativeFieldsWithDefaults instantiates a new CreativeFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreativeFieldsWithDefaults() *CreativeFields {
	this := CreativeFields{}
	return &this
}

// GetBanner returns the Banner field value if set, zero value otherwise.
func (o *CreativeFields) GetBanner() BannerFields {
	if o == nil || IsNil(o.Banner) {
		var ret BannerFields
		return ret
	}
	return *o.Banner
}

// GetBannerOk returns a tuple with the Banner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeFields) GetBannerOk() (*BannerFields, bool) {
	if o == nil || IsNil(o.Banner) {
		return nil, false
	}
	return o.Banner, true
}

// HasBanner returns a boolean if a field has been set.
func (o *CreativeFields) HasBanner() bool {
	if o != nil && !IsNil(o.Banner) {
		return true
	}

	return false
}

// SetBanner gets a reference to the given BannerFields and assigns it to the Banner field.
func (o *CreativeFields) SetBanner(v BannerFields) {
	o.Banner = &v
}

func (o CreativeFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreativeFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Banner) {
		toSerialize["banner"] = o.Banner
	}
	return toSerialize, nil
}

type NullableCreativeFields struct {
	value *CreativeFields
	isSet bool
}

func (v NullableCreativeFields) Get() *CreativeFields {
	return v.value
}

func (v *NullableCreativeFields) Set(val *CreativeFields) {
	v.value = val
	v.isSet = true
}

func (v NullableCreativeFields) IsSet() bool {
	return v.isSet
}

func (v *NullableCreativeFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreativeFields(val *CreativeFields) *NullableCreativeFields {
	return &NullableCreativeFields{value: val, isSet: true}
}

func (v NullableCreativeFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreativeFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


