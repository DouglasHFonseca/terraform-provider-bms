/*
AdServer Creative Management

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreativeGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreativeGroup{}

// CreativeGroup Represents a group of creatives that can be rendered in an Ad and the conditions for selecting which have priority.
type CreativeGroup struct {
	// The domain that this creative group is going to redirect to.
	Domain string `json:"domain"`
	// The name of the creative group.
	Name string `json:"name"`
	Spec CreativeSpec `json:"spec"`
	// A list of all creatives that compose this creative group with their relative weights.
	Creatives []WeightedCreative `json:"creatives"`
	// Tags that the user can add to facilitate searching.
	Tags []string `json:"tags"`
	// The ID of the creative group.
	CreativeGroupId string `json:"creativeGroupId"`
	// The ID of the account that owns this creative group.
	AccountId string `json:"accountId"`
	// Indicates if it is archived.
	Archived bool `json:"archived"`
}

// NewCreativeGroup instantiates a new CreativeGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreativeGroup(domain string, name string, spec CreativeSpec, creatives []WeightedCreative, tags []string, creativeGroupId string, accountId string, archived bool) *CreativeGroup {
	this := CreativeGroup{}
	this.Domain = domain
	this.Name = name
	this.Spec = spec
	this.Creatives = creatives
	this.Tags = tags
	this.CreativeGroupId = creativeGroupId
	this.AccountId = accountId
	this.Archived = archived
	return &this
}

// NewCreativeGroupWithDefaults instantiates a new CreativeGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreativeGroupWithDefaults() *CreativeGroup {
	this := CreativeGroup{}
	return &this
}

// GetDomain returns the Domain field value
func (o *CreativeGroup) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *CreativeGroup) SetDomain(v string) {
	o.Domain = v
}

// GetName returns the Name field value
func (o *CreativeGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreativeGroup) SetName(v string) {
	o.Name = v
}

// GetSpec returns the Spec field value
func (o *CreativeGroup) GetSpec() CreativeSpec {
	if o == nil {
		var ret CreativeSpec
		return ret
	}

	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetSpecOk() (*CreativeSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spec, true
}

// SetSpec sets field value
func (o *CreativeGroup) SetSpec(v CreativeSpec) {
	o.Spec = v
}

// GetCreatives returns the Creatives field value
func (o *CreativeGroup) GetCreatives() []WeightedCreative {
	if o == nil {
		var ret []WeightedCreative
		return ret
	}

	return o.Creatives
}

// GetCreativesOk returns a tuple with the Creatives field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetCreativesOk() ([]WeightedCreative, bool) {
	if o == nil {
		return nil, false
	}
	return o.Creatives, true
}

// SetCreatives sets field value
func (o *CreativeGroup) SetCreatives(v []WeightedCreative) {
	o.Creatives = v
}

// GetTags returns the Tags field value
func (o *CreativeGroup) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *CreativeGroup) SetTags(v []string) {
	o.Tags = v
}

// GetCreativeGroupId returns the CreativeGroupId field value
func (o *CreativeGroup) GetCreativeGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreativeGroupId
}

// GetCreativeGroupIdOk returns a tuple with the CreativeGroupId field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetCreativeGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreativeGroupId, true
}

// SetCreativeGroupId sets field value
func (o *CreativeGroup) SetCreativeGroupId(v string) {
	o.CreativeGroupId = v
}

// GetAccountId returns the AccountId field value
func (o *CreativeGroup) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CreativeGroup) SetAccountId(v string) {
	o.AccountId = v
}

// GetArchived returns the Archived field value
func (o *CreativeGroup) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *CreativeGroup) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *CreativeGroup) SetArchived(v bool) {
	o.Archived = v
}

func (o CreativeGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreativeGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	toSerialize["name"] = o.Name
	toSerialize["spec"] = o.Spec
	toSerialize["creatives"] = o.Creatives
	toSerialize["tags"] = o.Tags
	toSerialize["creativeGroupId"] = o.CreativeGroupId
	toSerialize["accountId"] = o.AccountId
	toSerialize["archived"] = o.Archived
	return toSerialize, nil
}

type NullableCreativeGroup struct {
	value *CreativeGroup
	isSet bool
}

func (v NullableCreativeGroup) Get() *CreativeGroup {
	return v.value
}

func (v *NullableCreativeGroup) Set(val *CreativeGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCreativeGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCreativeGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreativeGroup(val *CreativeGroup) *NullableCreativeGroup {
	return &NullableCreativeGroup{value: val, isSet: true}
}

func (v NullableCreativeGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreativeGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


