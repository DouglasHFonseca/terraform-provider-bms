/*
AdServer Creative Management

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreativeGroupFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreativeGroupFilters{}

// CreativeGroupFilters Filters applicable to creative groups.
type CreativeGroupFilters struct {
	// Generic search that can match against id, name, tag and domain.
	Search *string `json:"search,omitempty"`
	// The list of creative IDs in usage to look for.
	CreativeIds []string `json:"creativeIds,omitempty"`
	// The domain to filter.
	Domain *string `json:"domain,omitempty"`
	// The description to search for.
	Name *string `json:"name,omitempty"`
	// `true` to include only archived creative groups, `false` to include only active, leave empty to include all.
	Archived *bool `json:"archived,omitempty"`
	// The tags to look for.
	Tag *string `json:"tag,omitempty"`
	Spec *CreativeSpec `json:"spec,omitempty"`
}

// NewCreativeGroupFilters instantiates a new CreativeGroupFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreativeGroupFilters() *CreativeGroupFilters {
	this := CreativeGroupFilters{}
	return &this
}

// NewCreativeGroupFiltersWithDefaults instantiates a new CreativeGroupFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreativeGroupFiltersWithDefaults() *CreativeGroupFilters {
	this := CreativeGroupFilters{}
	return &this
}

// GetSearch returns the Search field value if set, zero value otherwise.
func (o *CreativeGroupFilters) GetSearch() string {
	if o == nil || IsNil(o.Search) {
		var ret string
		return ret
	}
	return *o.Search
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupFilters) GetSearchOk() (*string, bool) {
	if o == nil || IsNil(o.Search) {
		return nil, false
	}
	return o.Search, true
}

// HasSearch returns a boolean if a field has been set.
func (o *CreativeGroupFilters) HasSearch() bool {
	if o != nil && !IsNil(o.Search) {
		return true
	}

	return false
}

// SetSearch gets a reference to the given string and assigns it to the Search field.
func (o *CreativeGroupFilters) SetSearch(v string) {
	o.Search = &v
}

// GetCreativeIds returns the CreativeIds field value if set, zero value otherwise.
func (o *CreativeGroupFilters) GetCreativeIds() []string {
	if o == nil || IsNil(o.CreativeIds) {
		var ret []string
		return ret
	}
	return o.CreativeIds
}

// GetCreativeIdsOk returns a tuple with the CreativeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupFilters) GetCreativeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CreativeIds) {
		return nil, false
	}
	return o.CreativeIds, true
}

// HasCreativeIds returns a boolean if a field has been set.
func (o *CreativeGroupFilters) HasCreativeIds() bool {
	if o != nil && !IsNil(o.CreativeIds) {
		return true
	}

	return false
}

// SetCreativeIds gets a reference to the given []string and assigns it to the CreativeIds field.
func (o *CreativeGroupFilters) SetCreativeIds(v []string) {
	o.CreativeIds = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *CreativeGroupFilters) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupFilters) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *CreativeGroupFilters) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *CreativeGroupFilters) SetDomain(v string) {
	o.Domain = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreativeGroupFilters) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupFilters) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreativeGroupFilters) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreativeGroupFilters) SetName(v string) {
	o.Name = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *CreativeGroupFilters) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupFilters) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *CreativeGroupFilters) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *CreativeGroupFilters) SetArchived(v bool) {
	o.Archived = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *CreativeGroupFilters) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupFilters) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *CreativeGroupFilters) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *CreativeGroupFilters) SetTag(v string) {
	o.Tag = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *CreativeGroupFilters) GetSpec() CreativeSpec {
	if o == nil || IsNil(o.Spec) {
		var ret CreativeSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupFilters) GetSpecOk() (*CreativeSpec, bool) {
	if o == nil || IsNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *CreativeGroupFilters) HasSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given CreativeSpec and assigns it to the Spec field.
func (o *CreativeGroupFilters) SetSpec(v CreativeSpec) {
	o.Spec = &v
}

func (o CreativeGroupFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreativeGroupFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Search) {
		toSerialize["search"] = o.Search
	}
	if !IsNil(o.CreativeIds) {
		toSerialize["creativeIds"] = o.CreativeIds
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	return toSerialize, nil
}

type NullableCreativeGroupFilters struct {
	value *CreativeGroupFilters
	isSet bool
}

func (v NullableCreativeGroupFilters) Get() *CreativeGroupFilters {
	return v.value
}

func (v *NullableCreativeGroupFilters) Set(val *CreativeGroupFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreativeGroupFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreativeGroupFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreativeGroupFilters(val *CreativeGroupFilters) *NullableCreativeGroupFilters {
	return &NullableCreativeGroupFilters{value: val, isSet: true}
}

func (v NullableCreativeGroupFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreativeGroupFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


