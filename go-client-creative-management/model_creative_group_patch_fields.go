/*
AdServer Creative Management

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreativeGroupPatchFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreativeGroupPatchFields{}

// CreativeGroupPatchFields `CreativeGroup` editable fields.
type CreativeGroupPatchFields struct {
	// The description of this creative group.
	Name *string `json:"name,omitempty"`
	// A list of all creatives that compose this creative group with their relative weights.
	Creatives []WeightedCreative `json:"creatives,omitempty"`
	// Tags that the user can add to facilitate searching.
	Tags []string `json:"tags,omitempty"`
	// Indicates if it is archived.
	Archived *bool `json:"archived,omitempty"`
}

// NewCreativeGroupPatchFields instantiates a new CreativeGroupPatchFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreativeGroupPatchFields() *CreativeGroupPatchFields {
	this := CreativeGroupPatchFields{}
	return &this
}

// NewCreativeGroupPatchFieldsWithDefaults instantiates a new CreativeGroupPatchFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreativeGroupPatchFieldsWithDefaults() *CreativeGroupPatchFields {
	this := CreativeGroupPatchFields{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreativeGroupPatchFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupPatchFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreativeGroupPatchFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreativeGroupPatchFields) SetName(v string) {
	o.Name = &v
}

// GetCreatives returns the Creatives field value if set, zero value otherwise.
func (o *CreativeGroupPatchFields) GetCreatives() []WeightedCreative {
	if o == nil || IsNil(o.Creatives) {
		var ret []WeightedCreative
		return ret
	}
	return o.Creatives
}

// GetCreativesOk returns a tuple with the Creatives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupPatchFields) GetCreativesOk() ([]WeightedCreative, bool) {
	if o == nil || IsNil(o.Creatives) {
		return nil, false
	}
	return o.Creatives, true
}

// HasCreatives returns a boolean if a field has been set.
func (o *CreativeGroupPatchFields) HasCreatives() bool {
	if o != nil && !IsNil(o.Creatives) {
		return true
	}

	return false
}

// SetCreatives gets a reference to the given []WeightedCreative and assigns it to the Creatives field.
func (o *CreativeGroupPatchFields) SetCreatives(v []WeightedCreative) {
	o.Creatives = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreativeGroupPatchFields) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupPatchFields) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreativeGroupPatchFields) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CreativeGroupPatchFields) SetTags(v []string) {
	o.Tags = v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *CreativeGroupPatchFields) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreativeGroupPatchFields) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *CreativeGroupPatchFields) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *CreativeGroupPatchFields) SetArchived(v bool) {
	o.Archived = &v
}

func (o CreativeGroupPatchFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreativeGroupPatchFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Creatives) {
		toSerialize["creatives"] = o.Creatives
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	return toSerialize, nil
}

type NullableCreativeGroupPatchFields struct {
	value *CreativeGroupPatchFields
	isSet bool
}

func (v NullableCreativeGroupPatchFields) Get() *CreativeGroupPatchFields {
	return v.value
}

func (v *NullableCreativeGroupPatchFields) Set(val *CreativeGroupPatchFields) {
	v.value = val
	v.isSet = true
}

func (v NullableCreativeGroupPatchFields) IsSet() bool {
	return v.isSet
}

func (v *NullableCreativeGroupPatchFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreativeGroupPatchFields(val *CreativeGroupPatchFields) *NullableCreativeGroupPatchFields {
	return &NullableCreativeGroupPatchFields{value: val, isSet: true}
}

func (v NullableCreativeGroupPatchFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreativeGroupPatchFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


